<?php

namespace App\Filament\Landing\Resources;

use App\Filament\Landing\Resources\LandingResource\Pages\CreateLanding;
use App\Filament\Landing\Resources\LandingResource\Pages\EditLanding;
use App\Filament\Landing\Resources\LandingResource\Pages\ListLandings;
use App\Filament\Landing\Resources\LandingResource\Pages\ViewLanding;
use App\Models\Landing;
use App\Models\Product;
use Filament\Forms\Components\FileUpload;
use Filament\Forms\Components\Group;
use Filament\Forms\Components\Section;
use Filament\Forms\Components\Select;
use Filament\Forms\Components\Textarea;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Support\Enums\FontWeight;
use Filament\Tables;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Table;

class LandingResource extends Resource
{
    protected static ?string $model = Landing::class;

    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';

    protected static ?string $pluralModelLabel = "Landinglar";

    protected static ?string $navigationLabel = "Landinglar";

    public static function getNavigationBadge(): ?string
    {
        return static::getModel()::count(); // TODO: Change the autogenerated stub
    }

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Section::make('Landing')
                    ->collapsible()
                    ->schema([
                        Select::make('store')
                            ->label("Do'kon")
                            ->preload()
                            ->options(
                                Product::getAllStoresGroupedBy()->pluck('store', 'store')->toArray()
                            )
                            ->validationMessages([
                                'required' => "Do'kon maydonini kiritish talab etiladi"
                            ])
                            ->searchPrompt("do'kon nomi bo'yicha qidiring ..")
                            ->placeholder("Do'kon tanlang")
                            ->searchable()
                            ->required()
                            ->reactive(),
                        Select::make('article')
                            ->label('Artikul')
                            ->preload()
                            ->disabled(fn(callable $get) => empty($get('store')))
                            ->options(fn(callable $get) => !empty($get('store')) ? Product::where('store', $get('store'))->get()->whereNotNull('article')
                                ->pluck('article', 'article'): [])
                            ->reactive()
                            ->validationMessages([
                                'required' => "Artikul maydonini kiritish talab etiladi"
                            ])
                            ->searchPrompt("artikul nomi bo'yicha qidiring ..")
                            ->placeholder('Artikul tanlang')
                            ->searchable()
                            ->required(),
                        Textarea::make('title')
                            ->label('Sarlavha')
                            ->validationMessages([
                                'required' => "Sarlavha maydonini kiritish talab etiladi"
                            ])
                            ->placeholder('Sarlavhani kiriting ..')
                            ->required(),
                        Textarea::make('subtitle')
                            ->label('Subtitr/Taglavha')
                            ->validationMessages([
                                'required' => "Subtitr maydonini kiritish talab etiladi"
                            ])
                            ->placeholder('Subtitrni kiriting ..')
                            ->required(),
                        Textarea::make('description')
                            ->label('Tavsifi')
                            ->required()
                            ->validationMessages([
                                'required' => "Tavsif maydonini kiritish talab etiladi"
                            ])
                            ->placeholder('Tavsifini kiriting ..')
                            ->columnSpanFull(),
                    ])->columnSpan(3)->columns(2),
                Group::make()->schema([
                    Section::make('Tekstlar')
                        ->collapsible()
                        ->schema([
                            Textarea::make('text1')
                                ->label('1 - Tekst')
                                ->validationMessages([
                                    'required' => "1 - Tekst maydonini kiritish talab etiladi"
                                ])
                                ->required(),
                            Textarea::make('text2')
                                ->label('2 - Tekst')
                                ->validationMessages([
                                    'required' => "2 - Tekst maydonini kiritish talab etiladi"
                                ])
                                ->required(),
                            Textarea::make('text3')
                                ->label('3 - Tekst'),
                        ])->columnSpan(1)
                ]),
                Section::make('Rasmlar')
                    ->collapsible()
                    ->schema([
                        FileUpload::make('img1')
                            ->label('Asosiy Rasm')
                            ->disk('public')->directory('images')
                            ->validationMessages([
                                'required' => "Asosiy Rasmni yuklash talab etiladi"
                            ])
                            ->required(),
                        FileUpload::make('img2')
                            ->label('1 - Rasm')
                            ->disk('public')->directory('images')
                            ->validationMessages([
                                'required' => "1 - Rasmni yuklash talab etiladi"
                            ])
                            ->required(),
                        FileUpload::make('img3')
                            ->label('2 - Rasm')
                            ->disk('public')->directory('images')
                            ->validationMessages([
                                'required' => "2 - Rasmni yuklash talab etiladi"
                            ])
                            ->required(),
                        FileUpload::make('img4')
                            ->label('3 - Rasm')
                            ->disk('public')->directory('images')
                            ->validationMessages([
                                'required' => "3 - Rasmni yuklash talab etiladi"
                            ])
                            ->required(),
                    ])->columnSpan([
                        'md' => 2,
                        'lg' => 0,
                        'xl' => 4,
                    ])->columns([
                        'md' => 2,
                        'lg' => 0,
                        'xl' => 4,
                    ]),
            ])->columns([
                'default' => 1,
                'md' => 2,
                'lg' => 3,
                'xl' => 4,
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\Layout\Stack::make([
                    Tables\Columns\ImageColumn::make('img1')
                        ->height('100%')
                        ->width('100%'),
                    Tables\Columns\Layout\Stack::make([
                        Tables\Columns\TextColumn::make('title')
                            ->searchable()
                            ->sortable()
                            ->weight(FontWeight::Bold),
                        Tables\Columns\TextColumn::make('subtitle')
                            ->searchable()
                            ->weight(FontWeight::Medium)
                            ->color('blue'),
                        TextColumn::make("article")
                            ->label("Article")
                            ->weight(FontWeight::SemiBold)
                            ->color('gray')
                            ->sortable()
                            ->searchable(),
                    ]),
                ])->space(3),
                Tables\Columns\Layout\Panel::make([
                    Tables\Columns\Layout\Split::make([
                        Tables\Columns\TextColumn::make('description')
                            ->color('gray'),
                    ]),
                ])->collapsible(),
            ])
            ->defaultSort('created_at', 'DESC')
            ->filters([
                //
            ])
            ->contentGrid([
                'md' => 2,
                'xl' => 3,
            ])
            ->paginated([
                12,
                24,
                36,
                48,
                60,
                72,
            ])
            ->actions([
                Tables\Actions\Action::make('visit')
                    ->label('Link')
                    ->icon('heroicon-m-arrow-top-right-on-square')
                    ->color('gray')
                    ->url(fn(Landing $record): string => $record->link)
                    ->openUrlInNewTab(),
                Tables\Actions\EditAction::make(),
                Tables\Actions\ViewAction::make(),
            ])
            ->bulkActions([
            ]);
    }


    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => ListLandings::route('/'),
            'create' => CreateLanding::route('/create'),
            'view' => ViewLanding::route('/{record}'),
            'edit' => EditLanding::route('/{record}/edit'),
        ];
    }
}
